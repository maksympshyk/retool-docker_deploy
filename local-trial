#!/usr/bin/env bash

# NB: local trial script has to be self-contained
# See https://sipb.mit.edu/doc/safe-shell/
set -euf -o pipefail

if [ -t 1 ]; then
  export NORMAL="$(tput sgr0)"
  export RED="$(tput setaf 1)"
  export GREEN="$(tput setaf 2)"
  export MAGENTA="$(tput setaf 5)"
  export CYAN="$(tput setaf 6)"
  export WHITE="$(tput setaf 7)"
  export BOLD="$(tput bold)"
else
  export NORMAL=""
  export RED=""
  export GREEN=""
  export MAGENTA=""
  export CYAN=""
  export WHITE=""
  export BOLD=""
fi

error_exit() {
  echo "${RED}${BOLD}ERROR${NORMAL}${BOLD}: $1${NORMAL}"
  shift
  while [ "$#" -gt "0" ]; do
    echo " - $1"
    shift
  done
  exit 1
}

log_step() {
  echo ''
  echo "${GREEN}${BOLD}INFO${NORMAL}${BOLD}: $1${NORMAL}"
  shift
  while [ "$#" -gt "0" ]; do
    echo " - $1"
    shift
  done
}

command_present() {
  type "$1" >/dev/null 2>&1
}

retool_containers_present() {
  # NB: awk is to remove whitespace from `wc`
  RETOOL_IMAGES="$(docker image ls | grep 'retool-onpremise' | wc -l | awk '{print $1}')"
  test "$RETOOL_IMAGES" -gt '0'
}

retool_trial_running() {
  # NB: awk is to remove whitespace from `wc`
  CONTAINERS="$(docker-compose ps -q | wc -l | awk '{print $1}')"
  test "$CONTAINERS" -gt '0'
}

# NB: trim trailing slash on $TMPDIR as different OS's do it differently
INSTALL_DIRECTORY="$HOME/retool"
DOCKER_CONTEXT="$INSTALL_DIRECTORY/retool-onpremise"

if [ ! -d "$INSTALL_DIRECTORY" ]; then
  if [ -d "$DOCKER_CONTEXT" ]; then
    log_step 'found a partial install, cleaning it up...'
    rm -rf "$DOCKER_CONTEXT"
  fi

  cd "$HOME"

  log_step 'setting up install location...' "$INSTALL_DIRECTORY"
  mkdir retool && cd retool

  log_step 'downloading...'
  wget https://github.com/tryretool/retool-onpremise/archive/master.zip

  log_step 'unpacking...'
  unzip master.zip

  # NB: this is to make onprem containers to all get named the same.
  mv retool-onpremise-master retool-onpremise
  cd retool-onpremise
  DOCKER_CONTEXT="$(pwd)"

  if ! command_present docker; then
    # shellcheck disable=2016
    log_step '`docker` not found, installing...'
    ./get-docker.sh
  else
    # shellcheck disable=2016
    log_step '`docker` found!'
  fi

  if ! command_present docker-compose; then
    # shellcheck disable=2016
    log_step '`docker-compose` not found, installing...'
    ./get-docker-compose.sh
  else
    # shellcheck disable=2016
    log_step '`docker-compose` found!'
  fi

  log_step 'setting environment variables'
  cp ./docker.env.trial docker.env

  if retool_containers_present; then
    log_step 'noticed you have tried Retool before, cleaning up...'
    docker-compose rm -fsv
  fi
else
  cd "$DOCKER_CONTEXT" || error_exit "Couldn't \`cd\` into '$DOCKER_CONTEXT'"
fi

if retool_trial_running; then
  log_step 'stopping Retool for update...'
  docker-compose down
fi

log_step 'updating Retool!'
docker-compose pull

log_step 'running Retool!'
docker-compose up -d

echo ""
echo " -- ${GREEN}${BOLD}!! RETOOL IS RUNNING !!${NORMAL} --"
echo ""
echo "  ${CYAN}Navigate to${NORMAL}:          ${WHITE}${BOLD}http://localhost:3000${NORMAL}"
# TODO this command won't work from any location - maybe move the installation out of the temp dir.
echo "  ${CYAN}To STOP Retool, run${NORMAL}:  ${WHITE}${BOLD}$DOCKER_CONTEXT/stop-local-trial${NORMAL}"
echo ""
for i in $(seq 10 1); do
  printf "\r%s%s%s%s%s%s" 'Opening your browser for you in ' "$i" ' seconds... ' "$GREEN" '<Press Ctrl-C to cancel>' "$NORMAL "
  sleep 1
done
# NB: empty stuff to fully wipe out previous line completely
printf "\r%s%s%s%s%s%s%s%s" "$MAGENTA" 'Check out your ' "$BOLD" 'BROWSER' "$NORMAL$MAGENTA" ' for some awesomeness!!!' "$NORMAL" '                              '
echo
open "http://localhost:3000"
