apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    io.kompose.service: api
    app: frontend-backend
  name: "{{ .Values.name }}-main"
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.service: api
        app: frontend-backend
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      containers:
      - args:
        - bash
        - -c
        {{ if .Values.postgresHost }}
        - chmod -R +x ./docker_scripts; sync; ./docker_scripts/wait-for-it.sh -t 0 {{ .Values.postgresHost }}:{{ .Values.postgresPort }};
          ./docker_scripts/start_api.sh
        {{ else }}
        - chmod -R +x ./docker_scripts; sync; ./docker_scripts/wait-for-it.sh -t 0 {{ .Values.name }}-postgres:5432;
          ./docker_scripts/start_api.sh
        {{ end }}
        env:
        - name: NODE_ENV
          value: production

        - name: LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.name }}-secret"
              key: license-key

        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.name }}-secret"
              key: jwt-secret

        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.name }}-secret"
              key: encryption-key

        - name: COOKIE_INSECURE
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.name }}-configmap"
              key: use-insecure-cookies

        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.name }}-configmap"
              key: postgres-host
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.name }}-configmap"
              key: postgres-port
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.name }}-configmap"
              key: postgres-db
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.name }}-configmap"
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.name }}-secret"
              key: postgres-password

        - name: CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.name }}-configmap"
              key: google-client-id
        - name: CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.name }}-secret"
              key: google-client-secret

        image: tryretool/backend:latest
        name: api
        ports:
        - containerPort: 3000
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: api
    app: frontend-backend
  name: "{{ .Values.name }}-main"
spec:
  type: LoadBalancer
  ports:
  - name: "3000"
    port: 3000
    targetPort: 3000
  selector:
    io.kompose.service: api
status:
  loadBalancer: {}
