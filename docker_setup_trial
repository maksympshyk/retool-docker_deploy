#!/bin/bash

postgresPassword="$(base64 /dev/urandom | head -c 64)"
jwtSecret="$(base64 /dev/urandom | head -c 256)"
encryptionKey="$(base64 /dev/urandom | head -c 64)"
publicIpAddress="$(dig +short myip.opendns.com @resolver1.opendns.com)"

hostname='127.0.0.1'

if [ -f ./docker.env ]; then
  mv docker.env "docker.env.$(date +"%Y-%m-%d_%H-%M-%S")"
fi

{ echo '## Set node environment to production'
  echo 'NODE_ENV=production'
  echo ''
  echo '## Set the JWT secret for the API server'
  echo "JWT_SECRET=${jwtSecret}"
  echo ''

  echo '## Set and generate postgres credentials'
  echo 'POSTGRES_DB=hammerhead_production'
  echo 'POSTGRES_USER=retool_internal_user'
  echo 'POSTGRES_HOST=postgres'
  echo 'POSTGRES_PORT=5432'
  echo "POSTGRES_PASSWORD=${postgresPassword}"

  echo 'RT_POSTGRES_USER=retool_internal_user'
  echo 'RT_POSTGRES_HOST=postgres'
  echo 'RT_POSTGRES_PORT=5432'
  echo "RT_POSTGRES_PASSWORD=${postgresPassword}"
  echo ''

  echo '## Set variables for the nginx server'
  echo "# Change '${hostname}' to retool.yourcompany.com to set up SSL properly"
  echo "DOMAINS=${hostname} -> http://api:3000"
  echo ''

  echo '## Set key to encrypt and decrypt database passwords, etc.'
  echo "ENCRYPTION_KEY=${encryptionKey}"
  echo ''

  echo "## Google SSO configuration"
  echo "# CLIENT_ID={YOUR GOOGLE CLIENT ID}"
  echo ''

  echo "## Okta configuration"
  echo "# Do not include an https:// in the URL below"
  echo "# OKTA_URL=dev-xyz.oktapreview.com"
  echo "# OKTA_CLIENT_ID={YOUR OKTA CLIENT ID}"

  echo ''
  echo '## License key'
  echo 'LICENSE_KEY=EXPIRED-LICENSE-KEY-TRIAL'

  echo "Cool! Now just run docker-compose up to launch Retool."
} >> docker.env
